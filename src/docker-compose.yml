version: '3.5'

services:
  postgres:
    container_name: postgres_container
    build: ./database/
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "3000:5432"
    networks:
      - postgres
    restart: always
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/root/.pgadmin

    ports:
      - "1111:80"
    networks:
      - postgres
    restart: always

  python-scraper:
    container_name: data_scraper
    build: ./scraper/
    networks:
      - postgres
    restart: always

  python-filter:
    container_name: data_filter
    build: ./filtering/
    networks:
      - postgres
    restart: always

  python-sentiment:
    container_name: sentiment_model
    build: ./sentiment/
    networks:
      - postgres
    restart: always

  frontend:
    container_name: frontend
    build: ./frontend/
    networks:
      - postgres
    restart: always
    ports:
      - "80:5000"
    environment:
      use_remote: 1 # uses strato server or as data source if 1, else uses local data source

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin: